package java02;

/*
    기본 타입(Primitive Type)
    타입은 데이터가 메모리에 어덯게 저장되고 처리되는지를 명시적으로 알려준다.
    8 종류가 제공되며 정수형, 실수형, 문자형, 논리형으로 나눌 수 있다.
*/

public class JavaPrimitiveType {

    public static void main(String[] args) {

        /*
            정수형 타입은 부호를 갖고 있으며, 소수부가 없는 수를 의미한다.
            정수형 타입은 세부사항은 다음과 같다.
            - byte: 1바이트, -128 ~ 127
            - short: 2바이트, -32768 ~ 32767
            - int: 4바이트, -2147483648 ~ 2147483647
            - long: 8바이트, -9223372036854775808 ~ 9223372036854775807
            ※ 이 범위를 벗어나면 오버플로우(overflow) 또는 언더플로우(underflow)가 발생한다.
        */
        byte num1 = 127;
        byte num2 = -128;
        num1++; // 127 + 1.
        num2--; // -128 -1.
        System.out.println(num1); // 오버플로우, -128
        System.out.println(num2); // 언더플로우, 127

        /*
            실수형 타입은 소수보와 지수부가 있는 수를 가리키며, 정수보다 훨씬
            더 넓은 표현 범위를 가진다.
            - float: 8비트/23비트(4바이트), 소수부 6자리까지 오차없음.
            - double: 11비트/52비트(8바이트), 소수부 15자리까지 오차없음.
        */
        float num3 = 1.123456F;
        double num4 = 1.1234567890;

        /*
            문자형 타입은 작은 정수 혹은 하나의 문자를 표현할 수 있는 타입을 의미한다.
            C언어와 달리 자바에서는 유니코드를 사용하므로 65536개의 문자를 사용할 수 있다.
            - char: 2바이트, 65536개의 문자 사용 가능.
        */
        char test = 'a';

        // 논리형 타입은 true | false의 값을 가질 수 있는 불리언 타입으로 1바이트를 가진다.
        boolean test1 = false;

    }
}
